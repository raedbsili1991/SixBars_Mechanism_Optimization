{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Running Optimizer . . .\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [79.89455717 28.38748414 70.60542771 18.33584833]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\rbsili\\OneDrive\\MSCA\\Spherical Wrists Projects\\Ueda iit pc\\GIT Uploader\\SixBars_OptimizerFunctions.py:197: MatplotlibDeprecationWarning: The griddata function was deprecated in version 2.2.\n",
      "  Z = griddata(x, y, z, xi, yi,interp='linear')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Min/Global Iso:  [0.0, 0.17712434708790356]\n",
      "WN =  0.8593093687107882\n",
      "\n",
      " Current Loss:  1.0\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [44.67215998 41.16803118 51.8924061  45.64583512]\n",
      "Min/Global Iso:  [4.483077073306119e-16, 0.7348157032801702]\n",
      "WN =  0.38661364139183735\n",
      "\n",
      " Current Loss:  0.9999999999999997\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [56.28760819 76.19366889 76.72408997 43.8590513 ]\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [27.61950132 18.50115606 32.59785845 66.9306558 ]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\rbsili\\OneDrive\\MSCA\\Spherical Wrists Projects\\Ueda iit pc\\GIT Uploader\\SixBars_OptimizerFunctions.py:310: RuntimeWarning: invalid value encountered in power\n",
      "  M = np.power(LA.det(np.dot(J,J.T)),1/m)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Solving Candidate-LL1,LL2,LL3,ALPHA [10.23246291 42.87003119 71.10568607 47.38393927]\n",
      "Min/Global Iso:  [0.16489524043851106, 0.32037635753657456]\n",
      "WN =  0.08170489149373436\n",
      "\n",
      " Current Loss:  0.9471714634931921\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [38.8306488  64.11458877 21.36430464 31.7610126 ]\n",
      "Min/Global Iso:  [0.4694883438939184, 0.9674436464488498]\n",
      "WN =  0.656144906441223\n",
      "\n",
      " Current Loss:  0.545796484618036\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [24.62424995 51.42947232 11.75988375 65.3260196 ]\n",
      "Min/Global Iso:  [3.2698378154978346e-16, 0.04445487967033615]\n",
      "WN =  0.19786774609865476\n",
      "\n",
      " Current Loss:  1.0\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [51.98951512 61.17928825 37.16433172 26.14601628]\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [70.62151019 57.81867386 67.09633282 29.48185199]\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [22.15677675 47.44327594 44.10028941 69.48336246]\n",
      "Min/Global Iso:  [0.0, 0.005789008317526154]\n",
      "WN =  0.24159657460662495\n",
      "\n",
      " Current Loss:  1.0\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [11.19484705 56.93674058 57.45210286 74.12825624]\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [13.99338856 68.68154151 48.48321025 37.40212766]\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [59.37921628 46.552725   54.85955627 40.05365829]\n",
      "Min/Global Iso:  [0.0, 0.5508754193443706]\n",
      "WN =  0.5590384777241356\n",
      "\n",
      " Current Loss:  1.0\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [62.74278156 75.28140229 39.49756257 26.78015371]\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [52.47788927 73.76286923 48.1213519  68.38815511]\n",
      "Min/Global Iso:  [1.2755872378246176e-15, 0.06076891471162314]\n",
      "WN =  0.13624533971798522\n",
      "\n",
      " Current Loss:  0.9999999999999999\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [20.62956646 48.99055973 44.68223689 55.61320377]\n",
      "Min/Global Iso:  [7.545365917118025e-13, 0.35718051521932964]\n",
      "WN =  0.12300840944243632\n",
      "\n",
      " Current Loss:  0.9999999999997305\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [46.56746122 23.10411326 28.12999051 58.10087411]\n",
      "Min/Global Iso:  [3.636571458283665e-15, 0.3319931356038368]\n",
      "WN =  0.41796354618360315\n",
      "\n",
      " Current Loss:  0.9999999999999988\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [29.40679305 55.44095027 25.26202274 38.99399482]\n",
      "Min/Global Iso:  [0.6214454822544823, 0.9236931124116258]\n",
      "WN =  0.3995906695004812\n",
      "\n",
      " Current Loss:  0.42597508830221353\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [42.35552367 84.98059399 83.78541112 63.71630161]\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [67.23475378 72.60907499 10.85987736 52.94288343]\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [34.99915313 64.84387782 78.33321098 51.03502691]\n",
      "Min/Global Iso:  [2.467808522603169e-16, 0.41890563446971757]\n",
      "WN =  0.1973238065868605\n",
      "\n",
      " Current Loss:  0.9999999999999999\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [33.59550203 36.5843521  36.08722135 22.31494044]\n",
      "Min/Global Iso:  [1.6543612251060546e-24, 0.2706198563620311]\n",
      "WN =  0.32489931328497273\n",
      "\n",
      " Current Loss:  1.0\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [49.41910816 72.17925576 60.85947554 15.12740798]\n",
      "Min/Global Iso:  [0.5308591455713664, 0.9433359645529309]\n",
      "WN =  0.4757051477062871\n",
      "\n",
      " Current Loss:  0.4992214758706903\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [17.06605574 19.30646722 15.44221978 80.95848861]\n",
      "Min/Global Iso:  [0.28245012229500277, 0.32177386133940933]\n",
      "WN =  0.1217319628291878\n",
      "\n",
      " Current Loss:  0.9091149335133486\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [60.45122465 52.93327531 33.88081748 60.87257299]\n",
      "Min/Global Iso:  [2.0758347603630345e-16, 0.4861466928867221]\n",
      "WN =  0.43181849363730135\n",
      "\n",
      " Current Loss:  0.9999999999999999\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [23.74592732 10.01876491 69.55739161 71.95163969]\n",
      "Min/Global Iso:  [8.327668997413106e-17, 0.10449788758772188]\n",
      "WN =  0.5600093475643779\n",
      "\n",
      " Current Loss:  1.0\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [73.72575583 37.70559896 56.00565931 32.26134498]\n",
      "Min/Global Iso:  [0.0, 0.028095746514095795]\n",
      "WN =  0.8961262255845378\n",
      "\n",
      " Current Loss:  1.0\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [82.34193213 70.26697106 65.8774554  23.47247886]\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [15.04380958 16.41351805 27.08443492 84.7795797 ]\n",
      "Min/Global Iso:  [0.16587248084079861, 0.18370275663889954]\n",
      "WN =  0.06409325239340381\n",
      "\n",
      " Current Loss:  0.9695287680190122\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [49.70831965 82.96037734 46.1534939  11.84676853]\n",
      "Min/Global Iso:  [0.9026594689160437, 0.9126233351852523]\n",
      "WN =  0.5934839136042028\n",
      "\n",
      " Current Loss:  0.17621190494129169\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [80.48335378 45.01474408 35.15698102 48.94517369]\n",
      "Min/Global Iso:  [0.0, 0.32148892930930106]\n",
      "WN =  0.9378108539898545\n",
      "\n",
      " Current Loss:  1.0\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [41.10565428 59.84912466 73.3931015  54.37504202]\n",
      "Min/Global Iso:  [3.336145332587071e-15, 0.5891185491541383]\n",
      "WN =  0.20269798350286608\n",
      "\n",
      " Current Loss:  0.999999999999998\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [57.23821994 31.45889757 61.82145239 62.87596382]\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [26.5997033  53.37632309 40.67653808 61.96689349]\n",
      "Min/Global Iso:  [5.94243776556184e-17, 0.11977554911449333]\n",
      "WN =  0.1357598636739448\n",
      "\n",
      " Current Loss:  1.0\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [55.01004332 67.5596387  31.29547224 41.7374863 ]\n",
      "Min/Global Iso:  [0.54196522089436, 0.965654069084028]\n",
      "WN =  0.6577680038542715\n",
      "\n",
      " Current Loss:  0.47664907914133725\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [72.86775372 78.50190483 42.97697111 21.10578657]\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [48.18694352 78.93922082 75.31336617 49.62184189]\n",
      "Min/Global Iso:  [3.15533085110684e-17, 0.40806950866760106]\n",
      "WN =  0.237756401350228\n",
      "\n",
      " Current Loss:  1.0\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [53.44165742 81.51474711 17.39163941 58.92777319]\n",
      "Min/Global Iso:  [0.0, 0.40611580441601214]\n",
      "WN =  0.2321903260098091\n",
      "\n",
      " Current Loss:  1.0\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [84.81991279 80.94124177 74.68710324 45.77200583]\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [11.77604609 66.66520256 22.14109841 33.18522169]\n",
      "Min/Global Iso:  [7.585600548738702e-15, 0.2607498306664441]\n",
      "WN =  0.18393201059729808\n",
      "\n",
      " Current Loss:  0.999999999999998\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [43.80835268 11.67350842 39.26154387 56.62397789]\n",
      "Min/Global Iso:  [0.0, 0.08951125001356924]\n",
      "WN =  0.405489672373478\n",
      "\n",
      " Current Loss:  1.0\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [69.64577663 59.02237184 13.0786492  25.11134606]\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [31.98598358 62.58946859 23.72936405 42.34100883]\n",
      "Min/Global Iso:  [0.5984099972970409, 0.9144702256059615]\n",
      "WN =  0.44130823513807926\n",
      "\n",
      " Current Loss:  0.45277187476691216\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [19.45717851 43.81917946 82.5870988  28.13330115]\n",
      "Min/Global Iso:  [0.0, 0.10277478946685244]\n",
      "WN =  0.12996098067419207\n",
      "\n",
      " Current Loss:  1.0\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [53.47705459 82.96037734 46.1534939  11.84676853]\n",
      "Min/Global Iso:  [0.8756725093347337, 0.9191802070162997]\n",
      "WN =  0.6810807786059099\n",
      "\n",
      " Current Loss:  0.19509916159121687\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [18.31761548 41.16803118 51.8924061  45.64583512]\n",
      "Min/Global Iso:  [0.07886570148862956, 0.5734433010817289]\n",
      "WN =  0.15836047869628894\n",
      "\n",
      " Current Loss:  0.954774991796234\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [56.28760819 76.19366889 58.01778925 43.8590513 ]\n",
      "Min/Global Iso:  [0.5701398106177296, 0.8512914304539516]\n",
      "WN =  0.3348269014516726\n",
      "\n",
      " Current Loss:  0.514644865060488\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [76.75635469 59.93495624 77.88803037 35.00178418]\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [10.23246291 42.87003119 43.75734039 73.42718571]\n",
      "Min/Global Iso:  [0.0, 5.5975692667234235e-08]\n",
      "WN =  0.41400323959301927\n",
      "\n",
      " Current Loss:  1.0\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [30.79314519 64.11458877 21.36430464 31.7610126 ]\n",
      "Min/Global Iso:  [0.5310750796838956, 0.9413661127995792]\n",
      "WN =  0.5250545174047538\n",
      "\n",
      " Current Loss:  0.5000639166332446\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [59.03844938 56.2026877  28.80340413 65.3260196 ]\n",
      "Min/Global Iso:  [6.910914848170459e-15, 0.5310540686951034]\n",
      "WN =  0.3756005087535131\n",
      "\n",
      " Current Loss:  0.9999999999999963\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [15.47256923 13.34273701 54.11064477 80.00699576]\n",
      "Min/Global Iso:  [9.410813153521028e-14, 0.1106014945044391]\n",
      "WN =  0.15294395585387593\n",
      "\n",
      " Current Loss:  0.9999999999999896\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [51.98951512 52.82399796 37.16433172 26.14601628]\n",
      "Min/Global Iso:  [8.259488697535438e-16, 0.9104263867387441]\n",
      "WN =  0.5696587418181024\n",
      "\n",
      " Current Loss:  0.9999999999999992\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [70.62151019 39.18751202 67.09633282 29.48185199]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Solving Candidate-LL1,LL2,LL3,ALPHA [28.46545771 47.44327594 44.10028941 69.48336246]\n",
      "Min/Global Iso:  [8.634150497553653e-17, 0.13159902237534893]\n",
      "WN =  0.2484668113219363\n",
      "\n",
      " Current Loss:  1.0\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [25.05390106 56.93674058 57.45210286 74.12825624]\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [13.99338856 68.68154151 48.81842616 37.40212766]\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [59.37921628 46.552725   67.40090988 68.64528373]\n",
      "Min/Global Iso:  [0.0, 0.30116310428046483]\n",
      "WN =  0.3954246152265675\n",
      "\n",
      " Current Loss:  1.0\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [20.47978629 75.28140229 39.49756257 26.78015371]\n",
      "Min/Global Iso:  [3.7449683200384523e-14, 0.511737921926397]\n",
      "WN =  0.1888677275566119\n",
      "\n",
      " Current Loss:  0.9999999999999808\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [ 9.23385265 39.61518079 20.4285456  77.49336644]\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [20.62956646 72.39046747 44.68223689 55.61320377]\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [46.56746122 23.10411326 83.81753512 58.10087411]\n",
      "Min/Global Iso:  [7.69669954766277e-17, 0.2858662443895447]\n",
      "WN =  0.41686064190019473\n",
      "\n",
      " Current Loss:  1.0\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [49.02700386 55.44095027 25.26202274 38.99399482]\n",
      "Min/Global Iso:  [0.6249126329554815, 0.9792147134624943]\n",
      "WN =  0.6374235461640144\n",
      "\n",
      " Current Loss:  0.38807635518140526\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [42.35552367 45.13733408 75.00756831 63.71630161]\n",
      "Min/Global Iso:  [7.559668600030756e-16, 0.49723050506313576]\n",
      "WN =  0.25136966998416216\n",
      "\n",
      " Current Loss:  0.9999999999999997\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [67.23475378 63.05897759 23.30478349 52.94288343]\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [34.99915313 43.31642889 52.14156358 51.03502691]\n",
      "Min/Global Iso:  [0.7362821156170315, 0.839293144855659]\n",
      "WN =  0.2767479025248279\n",
      "\n",
      " Current Loss:  0.38204346768280373\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [33.59550203 36.5843521  36.08722135 38.60365716]\n",
      "Min/Global Iso:  [1.1090011910100046e-16, 0.7815399648751832]\n",
      "WN =  0.3185608956469109\n",
      "\n",
      " Current Loss:  0.9999999999999999\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [49.41910816 72.17925576 60.85947554 21.35769429]\n",
      "Min/Global Iso:  [0.7250147302497006, 0.9519291538344784]\n",
      "WN =  0.45373940332290197\n",
      "\n",
      " Current Loss:  0.3098373413158698\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [60.45122465 37.85406191 33.88081748 60.87257299]\n",
      "Min/Global Iso:  [0.0, 0.03927205271503594]\n",
      "WN =  0.5026678352713938\n",
      "\n",
      " Current Loss:  1.0\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [23.74592732 43.99089909 69.55739161 71.95163969]\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [55.88240221 26.95891003 19.34621496 14.01743137]\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [59.84258099 37.70559896 56.00565931 32.26134498]\n",
      "Min/Global Iso:  [1.7362787550677431e-16, 0.46765940374317666]\n",
      "WN =  0.804720544828864\n",
      "\n",
      " Current Loss:  0.9999999999999999\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [82.34193213 30.54125968 65.8774554  23.47247886]\n",
      "Min/Global Iso:  [4.046220111284056e-17, 0.29484199529858207]\n",
      "WN =  0.8715539693253843\n",
      "\n",
      " Current Loss:  1.0\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [15.04380958 50.74144767 16.68125328 84.7795797 ]\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [80.48335378 35.68646689 69.13459543 38.96520076]\n",
      "Min/Global Iso:  [0.0, 0.32130814931005575]\n",
      "WN =  0.8061017647418498\n",
      "\n",
      " Current Loss:  1.0\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [83.03741565 59.84912466 48.3073341  54.37504202]\n",
      "Min/Global Iso:  [2.041097062941559e-16, 0.015267541179436721]\n",
      "WN =  0.7045085660284283\n",
      "\n",
      " Current Loss:  1.0\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [61.12761339 29.73594922 43.30587908 44.07320151]\n",
      "Min/Global Iso:  [0.0, 0.5818127500462277]\n",
      "WN =  0.6667012379160555\n",
      "\n",
      " Current Loss:  1.0\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [26.5997033  53.37632309 40.67653808 37.94973038]\n",
      "Min/Global Iso:  [0.6527458304015188, 0.822846554269081]\n",
      "WN =  0.2638040916395893\n",
      "\n",
      " Current Loss:  0.46289034264060025\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [10.97606392 78.87817566 31.29547224 41.7374863 ]\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [72.86775372 78.50190483 79.73041244 21.10578657]\n",
      "Min/Global Iso:  [0.32062909638683906, 0.6620660154132009]\n",
      "WN =  0.7312151152761045\n",
      "\n",
      " Current Loss:  0.7877223717296303\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [31.65054886 38.55576926 14.70588244 57.47990152]\n",
      "Min/Global Iso:  [0.46426770038595105, 0.8571419464059955]\n",
      "WN =  0.40665571601449735\n",
      "\n",
      " Current Loss:  0.6020566796377504\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [48.18694352 78.93922082 75.31336617 55.42938123]\n",
      "Min/Global Iso:  [0.0, 0.24270584610729967]\n",
      "WN =  0.2244284552241295\n",
      "\n",
      " Current Loss:  1.0\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [53.44165742 32.81294854 66.68758157 58.92777319]\n",
      "Min/Global Iso:  [0.0, 0.2800838376069731]\n",
      "WN =  0.5254522138362426\n",
      "\n",
      " Current Loss:  1.0\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [46.82443764 80.94124177 74.68710324 45.77200583]\n",
      "Min/Global Iso:  [0.0, 0.4208633749826986]\n",
      "WN =  0.2503664913572096\n",
      "\n",
      " Current Loss:  1.0\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [11.77604609 66.66520256 22.14109841 72.02101437]\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [43.80835268 11.67350842 62.18903115 56.62397789]\n",
      "Min/Global Iso:  [0.0, 0.14497671105113616]\n",
      "WN =  0.5004182885113844\n",
      "\n",
      " Current Loss:  1.0\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [34.98286787 59.02237184 13.0786492  25.11134606]\n",
      "Solving Candidate-LL1,LL2,LL3,ALPHA [55.90121775 62.58946859 23.72936405 42.34100883]\n"
     ]
    }
   ],
   "source": [
    "\n",
    "#################################################################################\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import time\n",
    "import sympy as sy\n",
    "from sympy import *\n",
    "from sympy import Matrix, sin, cos, tan, pi, symbols, solve, nsolve\n",
    "init_printing(use_unicode=True)\n",
    "\n",
    "from matplotlib.mlab import griddata\n",
    "from numpy import linalg as LA\n",
    " \n",
    "\n",
    "########\n",
    "from scipy.optimize import root, minimize, differential_evolution\n",
    "import scipy.optimize as sc\n",
    "#######\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "from matplotlib import cm\n",
    "from matplotlib.ticker import LinearLocator, FormatStrFormatter\n",
    "#####\n",
    "import sympy as sy\n",
    "from sympy import *\n",
    "from sympy import Matrix, sin, cos, tan, pi, symbols, solve, nsolve\n",
    "init_printing(use_unicode=True)\n",
    "###\n",
    "import math\n",
    "from scipy.spatial import ConvexHull\n",
    "from array import array \n",
    "import pandas as pd\n",
    "import os\n",
    "from scipy.optimize._differentialevolution import DifferentialEvolutionSolver as DES \n",
    "#####################################################################################\n",
    "f_Energies = array('d')\n",
    "best_l1,best_l2,best_l3,best_alpha = array('d'),array('d'),array('d'),array('d')\n",
    "import SixBars_OptimizerFunctions as OF \n",
    "#####################################################################################\n",
    "\n",
    "\n",
    "#best_parameters.csv log the best candidate per generation, this is useful for ploting the pareto front for example\n",
    "#all_parameters.csv log all information about the every candidate per generation. \n",
    "########################### I N I T I A L I Z I N G  #########################\n",
    "Amplitude = 65\n",
    "dirname,filename_best,filename_all = 'Log_dir','/best_parameters','/all_parameters'\n",
    "N_contour = 50 # This defines the contour ploting resolution, keep this constant! \n",
    "N_grid = 25 # This defines the square grid input resolution \n",
    "###########################                                  #########################\n",
    "\n",
    "\n",
    "\n",
    "### Preparing the file to log into it optimization information \n",
    "iThetaL,iThetaR = OF.Generate_Input(Amplitude,N_grid)\n",
    "OF.createFolder(dirname)\n",
    "TargetFile_best = dirname + filename_best\n",
    "TargetFile_all = dirname + filename_all\n",
    "###############\n",
    "\n",
    "\n",
    "\n",
    "########################### L O S S     F U N C T I O N     D E S I G N  #########################\n",
    "\n",
    "# Design the loss function below, keep in mind that delta_ should be a vector  \n",
    "def loss_function(delta_,Global_Iso,WS_Number):\n",
    "     \n",
    "    loss = 1 - np.min(delta_)*Global_Iso#*WS_Number\n",
    "\n",
    "    return loss\n",
    "\n",
    "########################### O P T I M I Z E R     D E S I G N  #########################\n",
    "minimum_bnd, maximum_bnd = np.radians(9),np.radians(85)\n",
    "maximum_generations_number = 100 \n",
    "\n",
    "Bnds = [(minimum_bnd,maximum_bnd),(minimum_bnd,maximum_bnd),\n",
    "       (minimum_bnd,maximum_bnd),(minimum_bnd,maximum_bnd)]\n",
    "data = (TargetFile_all,Amplitude,N_contour,np.radians(iThetaL),np.radians(iThetaR),loss_function)\n",
    "\n",
    "\n",
    "solver  = DES(OF.f_isotropy_evo,bounds=Bnds,args=data,\n",
    "                              polish=True,\n",
    "                              init='latinhypercube',\n",
    "                              mutation = (1.5,1.9),\n",
    "                              recombination = 0.1,\n",
    "                              maxiter = maximum_generations_number, \n",
    "                              disp=True)\n",
    "\n",
    "\n",
    "\n",
    "########################### S T A R T I N G     O P T I M I Z E R   #########################\n",
    "print(\"Running Optimizer . . .\")\n",
    "\n",
    "\n",
    "time_start = time.clock()\n",
    "\n",
    "\n",
    "for i in range(maximum_generations_number):\n",
    "    P, e = next(solver)\n",
    "    \n",
    "    best_l1.append(np.degrees(P[0]))\n",
    "    best_l2.append(np.degrees(P[1]))\n",
    "    best_l3.append(np.degrees(P[2]))\n",
    "    best_alpha.append(np.degrees(P[3]))\n",
    "    \n",
    "    f_Energies.append(e)\n",
    "    print(\"[Step,Energy] = \", [i,e])\n",
    "    df = pd.DataFrame(data = {'f_Energy_Pareto':f_Energies,\n",
    "                              'best_l1':best_l1,'best_l2':best_l2,\n",
    "                              'best_l3':best_l3,'best_alpha':best_alpha},\n",
    "                     columns = ['f_Energy_Pareto', 'best_l1', 'best_l2', 'best_l3','best_alpha'])\n",
    "    df.to_csv(TargetFile_best)\n",
    "    if i >= maximum_generations_number - 1 :\n",
    "        print(\"Final Optimum is: \", np.degrees(P))\n",
    "        print(\"With a final energy: \", e)\n",
    "     \n",
    "\n",
    "\n",
    "    ######################   \n",
    "    \n",
    "\n",
    "print(\"Computation time [s] = \" (time.clock() - time_start) )    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernelspec": {
   "display_name": "Python [default]",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
